{"ast":null,"code":"var _jsxFileName = \"/Users/Roman/Desktop/RBP/frontend/src/components/ExportToWord.js\";\n// ExportToWord.js\nimport React from 'react';\nimport { Document, Packer, Paragraph, Table, TableRow, TableCell } from 'docx';\nimport { saveAs } from 'file-saver';\nconst ExportToWord = ({\n  selectedEmployees\n}) => {\n  const handleExport = async () => {\n    if (selectedEmployees.length === 0) {\n      alert(\"Нет выбранных сотрудников для экспорта.\");\n      return;\n    }\n    const doc = new Document();\n    const title = new Paragraph(\"Список сотрудников\");\n    doc.addSection({\n      properties: {},\n      children: [title]\n    });\n    selectedEmployees.forEach(emp => {\n      const row = new TableRow({\n        children: [new TableCell({\n          children: [new Paragraph(emp.firstName)]\n        }), new TableCell({\n          children: [new Paragraph(emp.lastName)]\n        }), new TableCell({\n          children: [new Paragraph(emp.salary.toString())]\n        }), new TableCell({\n          children: [new Paragraph(emp.jobType)]\n        }), new TableCell({\n          children: [new Paragraph(emp.department)]\n        })]\n      });\n\n      // Добавьте строку в таблицу\n      // Например:\n      // doc.addSection({\n      //     children: [new Table({\n      //         rows: [row],\n      //     })],\n      // });\n    });\n    const blob = await Packer.toBlob(doc);\n    saveAs(blob, \"employees.docx\");\n  };\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleExport,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"\\u042D\\u043A\\u0441\\u043F\\u043E\\u0440\\u0442 \\u0432 Word\");\n};\nexport default ExportToWord;","map":{"version":3,"names":["React","Document","Packer","Paragraph","Table","TableRow","TableCell","saveAs","ExportToWord","selectedEmployees","handleExport","length","alert","doc","title","addSection","properties","children","forEach","emp","row","firstName","lastName","salary","toString","jobType","department","blob","toBlob","createElement","onClick","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/Roman/Desktop/RBP/frontend/src/components/ExportToWord.js"],"sourcesContent":["// ExportToWord.js\nimport React from 'react';\nimport { Document, Packer, Paragraph, Table, TableRow, TableCell } from 'docx';\nimport { saveAs } from 'file-saver';\n\nconst ExportToWord = ({ selectedEmployees }) => {\n    const handleExport = async () => {\n        if (selectedEmployees.length === 0) {\n            alert(\"Нет выбранных сотрудников для экспорта.\");\n            return;\n        }\n\n        const doc = new Document();\n        const title = new Paragraph(\"Список сотрудников\");\n        doc.addSection({\n            properties: {},\n            children: [title],\n        });\n\n        selectedEmployees.forEach(emp => {\n            const row = new TableRow({\n                children: [\n                    new TableCell({ children: [new Paragraph(emp.firstName)] }),\n                    new TableCell({ children: [new Paragraph(emp.lastName)] }),\n                    new TableCell({ children: [new Paragraph(emp.salary.toString())] }),\n                    new TableCell({ children: [new Paragraph(emp.jobType)] }),\n                    new TableCell({ children: [new Paragraph(emp.department)] }),\n                ],\n            });\n\n            // Добавьте строку в таблицу\n            // Например:\n            // doc.addSection({\n            //     children: [new Table({\n            //         rows: [row],\n            //     })],\n            // });\n        });\n\n        const blob = await Packer.toBlob(doc);\n        saveAs(blob, \"employees.docx\");\n    };\n\n    return (\n        <button onClick={handleExport}>\n            Экспорт в Word\n        </button>\n    );\n};\n\nexport default ExportToWord;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,MAAM;AAC9E,SAASC,MAAM,QAAQ,YAAY;AAEnC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAkB,CAAC,KAAK;EAC5C,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAID,iBAAiB,CAACE,MAAM,KAAK,CAAC,EAAE;MAChCC,KAAK,CAAC,yCAAyC,CAAC;MAChD;IACJ;IAEA,MAAMC,GAAG,GAAG,IAAIZ,QAAQ,CAAC,CAAC;IAC1B,MAAMa,KAAK,GAAG,IAAIX,SAAS,CAAC,oBAAoB,CAAC;IACjDU,GAAG,CAACE,UAAU,CAAC;MACXC,UAAU,EAAE,CAAC,CAAC;MACdC,QAAQ,EAAE,CAACH,KAAK;IACpB,CAAC,CAAC;IAEFL,iBAAiB,CAACS,OAAO,CAACC,GAAG,IAAI;MAC7B,MAAMC,GAAG,GAAG,IAAIf,QAAQ,CAAC;QACrBY,QAAQ,EAAE,CACN,IAAIX,SAAS,CAAC;UAAEW,QAAQ,EAAE,CAAC,IAAId,SAAS,CAACgB,GAAG,CAACE,SAAS,CAAC;QAAE,CAAC,CAAC,EAC3D,IAAIf,SAAS,CAAC;UAAEW,QAAQ,EAAE,CAAC,IAAId,SAAS,CAACgB,GAAG,CAACG,QAAQ,CAAC;QAAE,CAAC,CAAC,EAC1D,IAAIhB,SAAS,CAAC;UAAEW,QAAQ,EAAE,CAAC,IAAId,SAAS,CAACgB,GAAG,CAACI,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAC;QAAE,CAAC,CAAC,EACnE,IAAIlB,SAAS,CAAC;UAAEW,QAAQ,EAAE,CAAC,IAAId,SAAS,CAACgB,GAAG,CAACM,OAAO,CAAC;QAAE,CAAC,CAAC,EACzD,IAAInB,SAAS,CAAC;UAAEW,QAAQ,EAAE,CAAC,IAAId,SAAS,CAACgB,GAAG,CAACO,UAAU,CAAC;QAAE,CAAC,CAAC;MAEpE,CAAC,CAAC;;MAEF;MACA;MACA;MACA;MACA;MACA;MACA;IACJ,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAMzB,MAAM,CAAC0B,MAAM,CAACf,GAAG,CAAC;IACrCN,MAAM,CAACoB,IAAI,EAAE,gBAAgB,CAAC;EAClC,CAAC;EAED,oBACI3B,KAAA,CAAA6B,aAAA;IAAQC,OAAO,EAAEpB,YAAa;IAAAqB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,wDAEvB,CAAC;AAEjB,CAAC;AAED,eAAe5B,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}
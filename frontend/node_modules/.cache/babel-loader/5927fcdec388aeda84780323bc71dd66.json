{"ast":null,"code":"var _jsxFileName = \"/Users/Roman/Desktop/RBP/frontend/src/components/ExportToExcel.js\";\nimport React from 'react';\nimport * as XLSX from 'xlsx'; // Используем именованный импорт\nimport fileDownload from 'js-file-download';\nconst ExportToExcel = ({\n  selectedEmployees\n}) => {\n  const generateExcel = () => {\n    // Преобразование данных сотрудников в формат для Excel\n    const worksheet = XLSX.utils.json_to_sheet(selectedEmployees);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, 'Employees');\n\n    // Генерация Excel-файла\n    const excelBuffer = XLSX.write(workbook, {\n      bookType: 'xlsx',\n      type: 'array'\n    });\n    const data = new Blob([excelBuffer], {\n      type: 'application/octet-stream'\n    });\n    fileDownload(data, 'employees.xlsx');\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: generateExcel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, \"Download Excel Document\"));\n};\nexport default ExportToExcel;","map":{"version":3,"names":["React","XLSX","fileDownload","ExportToExcel","selectedEmployees","generateExcel","worksheet","utils","json_to_sheet","workbook","book_new","book_append_sheet","excelBuffer","write","bookType","type","data","Blob","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["/Users/Roman/Desktop/RBP/frontend/src/components/ExportToExcel.js"],"sourcesContent":["import React from 'react';\nimport * as XLSX from 'xlsx'; // Используем именованный импорт\nimport fileDownload from 'js-file-download';\n\nconst ExportToExcel = ({ selectedEmployees }) => {\n    const generateExcel = () => {\n        // Преобразование данных сотрудников в формат для Excel\n        const worksheet = XLSX.utils.json_to_sheet(selectedEmployees);\n        const workbook = XLSX.utils.book_new();\n        XLSX.utils.book_append_sheet(workbook, worksheet, 'Employees');\n\n        // Генерация Excel-файла\n        const excelBuffer = XLSX.write(workbook, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], { type: 'application/octet-stream' });\n        fileDownload(data, 'employees.xlsx');\n    };\n\n    return (\n        <div>\n            <button onClick={generateExcel}>\n                Download Excel Document\n            </button>\n        </div>\n    );\n};\n\nexport default ExportToExcel;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,IAAI,MAAM,MAAM,CAAC,CAAC;AAC9B,OAAOC,YAAY,MAAM,kBAAkB;AAE3C,MAAMC,aAAa,GAAGA,CAAC;EAAEC;AAAkB,CAAC,KAAK;EAC7C,MAAMC,aAAa,GAAGA,CAAA,KAAM;IACxB;IACA,MAAMC,SAAS,GAAGL,IAAI,CAACM,KAAK,CAACC,aAAa,CAACJ,iBAAiB,CAAC;IAC7D,MAAMK,QAAQ,GAAGR,IAAI,CAACM,KAAK,CAACG,QAAQ,CAAC,CAAC;IACtCT,IAAI,CAACM,KAAK,CAACI,iBAAiB,CAACF,QAAQ,EAAEH,SAAS,EAAE,WAAW,CAAC;;IAE9D;IACA,MAAMM,WAAW,GAAGX,IAAI,CAACY,KAAK,CAACJ,QAAQ,EAAE;MAAEK,QAAQ,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAQ,CAAC,CAAC;IAC7E,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACL,WAAW,CAAC,EAAE;MAAEG,IAAI,EAAE;IAA2B,CAAC,CAAC;IAC1Eb,YAAY,CAACc,IAAI,EAAE,gBAAgB,CAAC;EACxC,CAAC;EAED,oBACIhB,KAAA,CAAAkB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACIxB,KAAA,CAAAkB,aAAA;IAAQO,OAAO,EAAEpB,aAAc;IAAAc,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,yBAExB,CACP,CAAC;AAEd,CAAC;AAED,eAAerB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}